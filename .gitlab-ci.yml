stages:
  - lint
  - test
  - benchmark
  - publish

variables:                         &default-vars
  GIT_STRATEGY:                    fetch
  GIT_DEPTH:                       100
  CARGO_INCREMENTAL:               0
  CARGO_TARGET_DIR:                "/ci-cache/${CI_PROJECT_NAME}/targets/${CI_COMMIT_REF_NAME}/${CI_JOB_NAME}"
  CI_IMAGE:                        "paritytech/ci-linux:production"
  VAULT_SERVER_URL:                "https://vault.parity-mgmt-vault.parity.io"
  VAULT_AUTH_PATH:                 "gitlab-parity-io-jwt"
  VAULT_AUTH_ROLE:                 "cicd_gitlab_parity_${CI_PROJECT_NAME}"

.vault-secrets:                    &vault-secrets
  secrets:
    GITHUB_TOKEN:
      vault:                       cicd/gitlab/parity/GITHUB_TOKEN@kv
      file:                        false
    GITHUB_USER:
      vault:                       cicd/gitlab/parity/GITHUB_USER@kv
      file:                        false

.common-refs:                      &common-refs
  rules:
    - if: $CI_PIPELINE_SOURCE == "web"
    - if: $CI_COMMIT_REF_NAME == "main"
    - if: $CI_COMMIT_REF_NAME == "master"
    - if: $CI_COMMIT_REF_NAME =~ /^[0-9]+$/                         # PRs

# run nightly by schedule
.schedule-refs:                    &schedule-refs
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"

.rust-info-script:                 &rust-info-script
  - rustup show
  - cargo --version
  - rustup +nightly show
  - cargo +nightly --version
  - bash --version
  - sccache -s

.docker-env:                       &docker-env
  image:                           "${CI_IMAGE}"
  before_script:
    - *rust-info-script
    - ./scripts/ci/pre_cache.sh
    - sccache -s
  retry:
    max: 2
    when:
      - runner_system_failure
      - unknown_failure
      - api_failure
  interruptible:                   true
  tags:
    - linux-docker

.kubernetes-env:                   &kubernetes-env
  image:                           "${CI_IMAGE}"
  retry:
    max: 2
    when:
      - runner_system_failure
      - unknown_failure
      - api_failure
  interruptible:                   true
  tags:
    - kubernetes-parity-build

.collect-artifacts:                &collect-artifacts
  artifacts:
    name:                          "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    when:                          on_success
    expire_in:                     28 days
    paths:
      - ./artifacts/

#### stage:                        lint

fmt:
  stage:                           lint
  <<:                              *kubernetes-env
  <<:                              *common-refs
  script:
    # FIXME: remove after stable fmt added to ci-linux
    - rustup component add rustfmt
    - cargo fmt --all -- --check

clippy:
  stage:                           lint
  <<:                              *docker-env
  <<:                              *common-refs
  script:
    # FIXME: remove after stable clippy added to ci-linux
    - rustup component add clippy
    - cargo clippy --all-targets

check-rustdoc-links:
  stage:                           lint
  <<:                              *docker-env
  <<:                              *common-refs
  script:
    - RUSTDOCFLAGS="--deny broken_intra_doc_links" cargo doc --workspace --no-deps --document-private-items

#### stage:                       test

check-code:
  stage:                           test
  <<:                              *docker-env
  <<:                              *common-refs
  script:
    - cargo install cargo-hack
    - cargo hack check --workspace --each-feature

test:
  stage:                           test
  <<:                              *docker-env
  <<:                              *common-refs
  script:
    - cargo test

benchmarks:
  stage:                           benchmark
  <<:                              *docker-env
  <<:                              *collect-artifacts
  <<:                              *schedule-refs
  script:
    - cargo bench -p jsonrpsee-benchmarks -- --output-format bencher | tee output.txt
    - mkdir artifacts
    - cp output.txt artifacts/

publish-bench:
  stage:                           publish
  <<:                              *docker-env
  <<:                              *vault-secrets
  <<:                              *schedule-refs
  needs:
    - job:                         benchmarks
      artifacts:                   true
  script:
    - rm -rf /tmp/*
    # Set git config
    - rm -rf .git/config
    - git config user.email "devops-team@parity.io"
    - git config user.name "${GITHUB_USER}"
    - git config remote.origin.url "https://${GITHUB_TOKEN}@github.com:paritytech/jsonrpsee.git"
    - git config remote.origin.fetch "+refs/heads/*:refs/remotes/origin/*"
    - git fetch origin gh-pages
    # Add artifacts to gh-pages
    - mv artifacts/output.txt /tmp
    - git checkout gh-pages
    - mkdir bench/gitlab || echo "Dir exists"
    - mv /tmp/output.txt bench/gitlab/output_$(date +"%m-%d-%y").txt
    - rm -rf artifacts/
    # Upload files
    - git add --all --force
    # `git commit` has an exit code of > 0 if there is nothing to commit.
    # This causes GitLab to exit immediately and marks this job failed.
    # We don't want to mark the entire job failed if there's nothing to
    # publish though, hence the `|| true`.
    - git commit -m "Updated docs for ${CI_COMMIT_REF_NAME}" ||
        echo "___Nothing to commit___"
    - git push origin gh-pages --force
  after_script:
    - rm -rf .git/ ./*
